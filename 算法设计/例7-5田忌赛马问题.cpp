#include<iostream>
#include<vector>
#include<algorithm>
#include<stdio.h>
#include <queue>		
using namespace std;
//【问题描述】二千多年前的战国时期，齐威王与大将田忌赛马。双方约定每人各出300匹马，
//并且在上、中、下三个等级中各选一匹进行比赛，由于齐威王每个等级的马都比田忌的马略强，比赛的结果可想而知。
//现在双方各n匹马，依次派出一匹马进行比赛，每一轮获胜的一方将从输的一方得到200银币，平局则不用出钱，
//田忌已知所有马的速度值并【可以安排出场顺序】（田忌可以选择对方的🐎！），问他如何安排比赛获得的银币最多。
//
//输入：输入包含多个测试用例，每个测试用例的第一行正整数n（n≤1000）马的数量，
//后两行分别是n个整数，表示田忌和齐威王的马的速度值。输入n = 0结束。
//输出：每个测试用例输出一行，表示田忌获得的最多银币数。
//输入样例：
//3【三匹马】
//92 83 71【田忌】
//95 87 74【齐威王】
//2
//20 20
//20 20
//2
//20 19
//22 18
//0
//样例输出：
//200
//0
//0

//分情况讨论：
//（1）田忌最快的马比齐威王最快的马快。此时田忌最快的马一定赢，而选择与齐威王最快的马比赛对于田忌来说是最优的
//（2）田忌最快的马比齐威王最快的马慢。齐威王最快的马一定赢，而选择与田忌最慢的马比赛对于田忌来说是最优的。
//（3）田忌最快的马与齐威王最快的马的速度相同：
//    a> 田忌最慢的马比齐威王最慢的马快。此时齐威王最慢的马一定输，而选择与田忌最慢的马比赛对于田忌来说是最优的。
//    b> 田忌最慢的马比齐威王最慢的马慢。此时田忌最慢的马一定输，而选择与齐威王最快的马比赛对于田忌来说是最优的。
//    c>


    void solve()				//求解算法
{
    sort(a, a + n);			//对a递增排序【田忌🐎】
    sort(b, b + n);			//对b递增排序【齐威王🐎】
    ans = 0;
    int lefta = 0, leftb = 0;
    int righta = n - 1, rightb = n - 1;
    while (lefta <= righta)		//比赛直到结束
    {
        if (a[righta] > b[rightb])
            //田忌最快的马比齐威王最快的马快，两者比赛
        {
            ans += 200;
            righta--;
            rightb--;
        }
        else if (a[righta] < b[rightb])
            //田忌最快的马比齐威王最快的马慢
        {
            ans -= 200;
            //选择田忌最慢的马与比齐威王最快的马比赛
            lefta++;
            rightb--;
        }
        else	//田忌最快的马与齐威王最快的马的速度相同
        {
            if (a[lefta] > b[leftb])
                //田忌最慢的马比齐威王最慢的马快，两者比赛
            {
                ans += 200;
                lefta++;
                leftb++;
            }
            else
            {
                if (a[lefta] < b[rightb])
                    //否则，用田忌最慢的马与齐威王最快的马比赛
                    ans -= 200;
                lefta++;
                rightb--;
            }
        }
    }
}